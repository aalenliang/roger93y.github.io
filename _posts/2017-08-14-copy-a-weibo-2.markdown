---
layout: post
title:  "模拟一个精简版微博 DAY 2"
date:   2017-08-14 15:21 +0800
author: 纪连
categories: maibo
comments: true
---

<style>
img {
    width: 70%;
    padding-left: 15%;
}
</style>

工作还在继续，期间报名了一个小的 [Angular] 在线培训，希望在前端知识有所进展。写字时候想起了在学习过程中被 Node.js 支配的恐惧，更确切说是对`npm isntall`的畏惧，从未想过包管理系统可以如此混乱，在 DAY2 的记录容我先吐槽一下。

首先，npm 包管理工具是推荐挂 VPN 的，否则各种校验和问题，还有各种谜一样的报错。不管在百度还是谷歌，亦或[Stack Overflow] 还是 [Segment Fault] 都难以找到通用解决方法，随后经推荐换了淘宝的镜像源 `cnpm` 情况稍有缓解，但观察交流群里的聊天，很多时候还是如何让项目跑起来，如何解决依赖安装。

第二，Angular 项目文件数量较多，一个很小的项目（此处指 [Angular] 官方 Turorial的展示项目`ng new my-app`），需要的依赖包数量是极其可怕的，主观感觉上比 Python 的同特性项目要大不少。有些项目不能使用全局的依赖包，需要将包保存在项目目录下，然后项目就有了一个体积可怕的 `node_modules` 文件夹，体积达到了惊人的 **124.9** MB，这些文件非常零碎，数量达到了惊人的 **26122** 个。我们**恶意的**（违背客观逻辑，简单的表象和底层的复杂度不相干）来看看实现了什么，显然哪里不太对。

![npm]({{ site.url }}/assets/imgs/2017-08/day2 p1.png.jpg)

最后，项目对硬件要求比想象中高，在 Mac 和 Win 下都出现了需要管理员权限的情景，项目最终编译的东西很多，对电脑配置提出一定要求。不得不感慨前端的不容易，也对 pypi 的工作表深表感激，希望有人能为前端重新设计下 npm ，毕竟提高效率是计算机行业的核心追求之一。我们继续对 [Maibo] 进行探索。

已经实现了关系系统，微博阅读和发布系统，接下来一步要设计的是转发和评论系统。显然在上个项目使用的单独文章页面已经不太适用。微博与博客性质不同，要获得良好的体验就要将评论和转发在当前页面内实现，而不产生页面的刷新，于是想到了`AJAX: Asynchronous Javascript And XML`，在早些时候看 ECMAScript 时候有留意到这个异步加载页面内容的技术，出于时间考虑，我不准备从零开始研究，我想到了一个在逐渐消失的库 `JQuery` ，只是模拟微博的话应该是足够了。

惊闻 `JQuery` 过时了，真是令人遗憾的消息，技术换代总是必然的，但只要不是重复炒冷饭重复造轮子就好，依然记得第一次接触`JQuery` 时候它神奇的理念带给我的冲击，致敬。

考虑到`Jinja2`的花括号和`Vue.js`冲突（虽然个人很喜欢这种简约，而且花括号的问题也不是完全不能解决），以及查找资料后，选择开始学习 React，目前而言它是和 Flask 很契合的前端框架。

放一张现在的进度图，然后开始写代码.

![process]({{ site.url }}/assets/imgs/2017-08/day3_p1.png.jpg)

